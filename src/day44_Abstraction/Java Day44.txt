Java Day44

Topics: Abstraction Continue
                Interface

Warmup task:
        Animal Task:
                Create an abstract class named Animal:
                Variables:
                            name,breed(final), gender(final), age,size,color(final)

                            Encapsulate all the fields

                            Add a constructor that can set all the fields

                            Methods:
                                    eat():      different animal eat different foods
                                    drink():    all the animal drink water
                                    toString(): to display the full intro of the animal
                            Create the following subclasses of Animal
                                    Dog
                                        eat(): eats Pizza
                                    Cat
                                        eat(): eats Biryani
                                    Tiger
                                        eat(): eats deer
                                    Parrot
                                        eat(): eats chocolate
                                    Eagle
                                        eat(): eats snake
OOP abstraction: concentrating on essential (what it is), not worrying about the implementation details

                            Abstract method: a method without the implementation/ body

                                             meant to be overridden

                                             method can not be final and static and does not have body

                            area();
                            perimeter();
                            eat();


                            Abstract class : only provide the methods and variables to the sup/child classes
                                             can not be final
                                             can not be created any object that belong to the abstract classes
                                             because it cannot be instantiated.